{"version":3,"sources":["component/hero-image-component/HeroImageComponent.tsx","views/contact-us/ContactUs.tsx","AboutUs/AboutUs.tsx","OurServices/OurServices.tsx","views/home-page/HomePageView.tsx","AppNavBar/AppNavBar.tsx","stores/HeroStore.ts","stores/BusinessDetailsStore.ts","stores/AllStores.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["HeroImageComponent","props","triggerMotoAnimation","setState","motoAnimation","triggerActionAnimation","actionAnimation","state","_","this","primaryAction","displayLabel","url","Grid","item","Button","variant","color","href","secondaryAction","className","Container","maxWidth","Grow","in","timeout","onEntering","Typography","align","gutterBottom","tagLine","paragraph","moto","container","spacing","justify","renderPrimaryAction","renderSecondaryAction","Component","numbers","displayNumber","dialNumber","ContactUsView","renderHero","xs","Card","CardContent","component","fontSize","map","num","Link","Divider","React","useStyles","makeStyles","theme","createStyles","root","margin","padding","AboutUs","aboutUsProps","classes","Paper","elevation","aboutUs","OurServices","ourServicesDetails","description","md","services","service","sm","card","CardActionArea","CardMedia","media","image","title","label","CardActions","size","withStyles","mainHeading","HomePageView","inject","observer","heroDetails","companyDetailStore","businessDetails","homePage","heroImage","ourServiceProps","ourServices","routes","path","Link1","forwardRef","ref","innerRef","AppNavBar","AppBar","position","Toolbar","filter","route","to","exact","heroImageData","require","HeroDetails","observable","CompanyDetailStore","allStores","App","basename","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e63d2bf3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Container, Typography, Grid, Button, Zoom, Grow } from \"@material-ui/core\";\n\nimport './HeroImageComponent.css';\nimport * as _ from 'lodash';\nimport { HeroImage } from \"../../data/BusinessDetails\";\n\nexport default class HeroImageComponent extends Component<HeroImage,any>{\n\n    constructor(props:any){\n        super(props);\n        this.state = {motoAnimation :false,\n            actionAnimation:false};\n    }\n\n    triggerMotoAnimation = () =>  {\n        this.setState({motoAnimation: true})\n\n    }\n    triggerActionAnimation = () =>  {\n        this.setState({actionAnimation: true})\n\n    }\n\n\n    renderPrimaryAction() {\n\n        debugger;\n        if (!_.isEmpty(this.props.primaryAction) &&\n            !_.isEmpty(this.props.primaryAction!.displayLabel) &&\n                !_.isEmpty(this.props.primaryAction!.url)) {\n            return (\n                <Grid item>\n                    <Button variant=\"contained\" color=\"primary\" href={this.props.primaryAction!.url}>\n                        {this.props.primaryAction!.displayLabel}\n                    </Button>\n                </Grid>\n            )\n        }\n    }\n\n    renderSecondaryAction() {\n        if (!_.isEmpty(this.props.secondaryAction) &&\n            !_.isEmpty(this.props.secondaryAction!.displayLabel) &&\n                !_.isEmpty(this.props.secondaryAction!.url)) {\n            return (\n                <Grid item>\n                    <Button variant=\"outlined\" color=\"primary\" href={this.props.secondaryAction!.url}>\n                        {this.props.secondaryAction!.displayLabel}\n                    </Button>\n                </Grid>\n            )\n        }\n    }\n\n    \n    render() {\n        return (<div className=\"main-hero-container\">\n\n            <Container maxWidth=\"lg\">\n            <Grow in={true} timeout={2700} onEntering={()=>{_.delay(this.triggerMotoAnimation,500)}}>\n                <Typography variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                    {this.props.tagLine!}\n                </Typography>\n                </Grow>\n                <Grow in={this.state.motoAnimation} timeout={2700} onEntering={()=>{_.delay(this.triggerActionAnimation,500)}}>\n                <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n                    {this.props.moto!}\n                </Typography>\n                </Grow>\n                \n                <Grow in={this.state.actionAnimation} timeout={2500}>\n                <div >\n                    <Grid container spacing={2} justify=\"center\">\n                        {this.renderPrimaryAction()}\n                        {this.renderSecondaryAction()}\n                    </Grid>\n                </div>\n                </Grow>\n            </Container> \n\n        </div>)\n    }\n}","import React, { Component } from \"react\";\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport CallIcon from '@material-ui/icons/Call';\n\nimport './ContactUs.css'\nimport { Link, Divider, Container, Grid, Icon } from \"@material-ui/core\";\nimport HeroImageComponent from \"../../component/hero-image-component/HeroImageComponent\";\nimport { HeroImage } from \"../../data/BusinessDetails\";\n\ninterface PhoneNumber {\n  displayLabel: string;\n  displayNumber: string;\n  dialNumber: string;\n}\nconst numbers: Array<PhoneNumber> = [\n  {\n    displayLabel: \"Mumbai (HeadOffice)\",\n    displayNumber: \"9833577717\",\n    dialNumber: \"+919833577717\"\n  }, {\n    displayLabel: \"Surat\",\n    displayNumber: \"9833577717\",\n    dialNumber: \"+919833577717\"\n  }, {\n    displayLabel: \"Mumbai (HeadOffice)\",\n    displayNumber: \"9833577717\",\n    dialNumber: \"+919833577717\"\n  },\n  {\n    displayLabel: \"Pune (Regional)\",\n    displayNumber: \"+91 9833577717\",\n    dialNumber: \"+919833577717\"\n  },\n  {\n    displayLabel: \"Support \",\n    displayNumber: \"9833577717\",\n    dialNumber: \"+919833577717\"\n  }\n]\n\nexport class ContactUsView extends React.Component {\n  renderHero() {\n    const heroImage: HeroImage = {\n      tagLine: \"Connect with Us...\"\n    }\n    return (<HeroImageComponent {...heroImage} ></HeroImageComponent>)\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderHero()}\n        <Grid container justify=\"center\">\n          <Grid item xs={12} >\n            <Card className=\"contact-card\">\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\" align=\"center\">\n                  <CallIcon fontSize=\"large\" color=\"primary\" ></CallIcon><br />\n                  Contact\n      </Typography>\n\n\n              </CardContent>\n\n              <CardContent>\n\n                {numbers.map((num: PhoneNumber) => {\n\n                  return (\n                    <div>\n                      <div >\n\n                        <Typography variant=\"button\" color=\"textPrimary\" component=\"p\" >\n                          {num.displayLabel}\n                        </Typography>\n\n                        <Typography variant=\"subtitle1\" color=\"primary\" component=\"p\">\n\n                          <Link color=\"primary\" href=\"tel:{num.dialNumber}\" >\n\n                            {num.displayNumber}\n                          </Link>\n                        </Typography>\n\n\n                      </div>\n                      <div className=\"phone-number\">\n\n                        <Divider variant=\"middle\" />\n                      </div>\n                    </div>\n                  )\n                })}\n\n\n              </CardContent>\n\n              \n            </Card>\n          </Grid>\n        </Grid>\n\n      </div>)\n  }\n}","import React from 'react';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nexport interface AboutUsProps{\n  displayLabel?: string,\n  aboutUs?:string,\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n        margin : theme.spacing(3,2),\n      padding: theme.spacing(3, 2),\n    },\n  }),\n);\n\nexport default function AboutUs(aboutUsProps:AboutUsProps) {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root} elevation={12}>\n      <Typography color=\"primary\" variant=\"h4\" align=\"left\">\n        {aboutUsProps.displayLabel}\n      </Typography>\n      <Typography component=\"p\">\n      {aboutUsProps.aboutUs}\n      </Typography>\n    </Paper>\n  );\n}","import React from \"react\";\nimport { Paper, Grid } from \"@material-ui/core\";\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { OurServicesDetails } from \"../data/BusinessDetails\";\n\n\nconst styles = (theme: Theme) => ({\n  root: {\n    margin: theme.spacing(3, 2),\n    padding: theme.spacing(3, 2),\n  },\n  mainHeading:{\n    \n  },\n  card: {\n    margin: theme.spacing(2, 2, 2, 2),\n    maxWidth: 275,\n  },\n});\n\ninterface ServiceCardDetails {\n  label: string,\n  description: string\n}\n\nconst services: Array<ServiceCardDetails> = [\n  {\n    label: \"DEPB\",\n    description: \"Duty Entitlement Pass Book - An export incentive scheme provided in Import and Export policy.\"\n  },\n  {\n    label: \"VKGUY\",\n    description: \" Vishesh Krishi And Gram Udyog Yojana - Special Agriculture And Village Industry Scheme.  \"\n  },\n  {\n    label: \"FMS\",\n    description: \"Focus Market Scheme\"\n  },\n  {\n    label: \"FPS\",\n    description: \"Focus Product Scheme\"\n  }\n]\n\nexport interface OurServicesProps{\n  classes?:any,\n  ourServicesDetails?: OurServicesDetails\n\n}\n\nexport class OurServices extends React.Component<OurServicesProps>{\n  static propTypes: { classes: any; };\n\n\n  render() {\n    const { classes } = this.props;\n    return (<Paper className={classes.root} elevation={12}>\n      <Typography color=\"primary\" variant=\"h4\" align=\"left\">\n        Our Services\n      </Typography>\n      <Typography color=\"textPrimary\" align=\"left\">\n      {this.props.ourServicesDetails!.description}\n      </Typography>\n\n      <Grid container justify=\"center\">\n        <Grid item xs={12} md={9}>\n\n          <Grid container justify=\"center\" spacing={0}>\n\n            {this.props.ourServicesDetails!.services.map((service: ServiceCardDetails) => {\n              return (\n                <Grid item xs={12} sm={6} md={4} >\n                  <Card className={classes.card}>\n                    <CardActionArea>\n                      <CardMedia\n                        className={classes.media}\n                        image=\"fff.png\"\n                        title=\"Contemplative Reptile\"\n                      />\n                      <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\" color=\"primary\">\n                          {service.label}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                          {service.description}\n                        </Typography>\n                      </CardContent>\n                    </CardActionArea>\n                    <CardActions>\n                      <Button size=\"small\" color=\"primary\">\n                        Share\n          </Button>\n                      <Button size=\"small\" color=\"primary\">\n                        Learn More\n          </Button>\n                    </CardActions>\n                  </Card>\n\n\n                </Grid>\n              )\n            })}\n          </Grid>\n\n        </Grid>\n      </Grid>\n    </Paper>);\n  }\n}\n\n\n\nexport default withStyles(styles)(OurServices);","import React from \"react\";\nimport AboutUs, { AboutUsProps } from \"../../AboutUs/AboutUs\";\nimport OurServices, { OurServicesProps } from \"../../OurServices/OurServices\";\nimport HeroImageComponent  from \"../../component/hero-image-component/HeroImageComponent\";\nimport { HeroDetails } from \"../../stores/HeroStore\";\nimport { inject, observer } from \"mobx-react\";\nimport CompanyDetailStore from \"../../stores/BusinessDetailsStore\";\nimport { HeroImage } from \"../../data/BusinessDetails\";\n\ninterface HomePageViewProps {\n    companyDetailStore?: CompanyDetailStore\n}\n\n@inject('companyDetailStore')\n@observer\nexport class HomePageView extends React.Component<HomePageViewProps> {\n    render() {\n        const heroDetails:HeroImage = this.props.companyDetailStore!.businessDetails.homePage!.heroImage;\n\n        const aboutUsProps:AboutUsProps = {\n            displayLabel : \"About Us\",\n            aboutUs : this.props.companyDetailStore!.businessDetails.aboutUs\n        }\n\n        const ourServiceProps : OurServicesProps ={\n            ourServicesDetails : this.props.companyDetailStore!.businessDetails!.ourServices\n        }\n\n        return (\n            <div>\n                <HeroImageComponent {...heroDetails}> </HeroImageComponent>\n                    <AboutUs {...aboutUsProps}></AboutUs>\n                    <OurServices {...ourServiceProps}></OurServices>\n        </div>)\n            }\n}","import React, { Component } from \"react\";\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\n\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport './AppNavBar.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport { Link as RouterLink1, LinkProps as RouterLinkProps } from 'react-router-dom';\nimport { ContactUsView } from \"../views/contact-us/ContactUs\";\nimport { HomePageView } from \"../views/home-page/HomePageView\";\n\nconst pre=\"\"\nexport interface RouteInfo{\n  displayLabel:string;\n  path:string;\n  component:any\n}\nconst routes:Array<RouteInfo> =[{\n  displayLabel:\"Home\",\n  path:pre+\"/home\",\n  component : HomePageView\n},\n{\n  displayLabel:\"Contact\",\n  path:pre+\"/contact\",\n  component : ContactUsView\n},{\n  displayLabel:\"\",\n  path:\"/\",\n  component : HomePageView\n}]\n\n\nconst Link1 = React.forwardRef<HTMLAnchorElement, RouterLinkProps>((props, ref) => (\n  <RouterLink1 innerRef={ref} {...props} />\n));\n\nexport default class AppNavBar extends Component<any>{\n  render() {\n\n    return (<div>\n\n    <AppBar position=\"static\">\n      <Toolbar variant=\"dense\">\n\n        <Typography variant=\"h5\" className=\"nav-company-name\">\n          NTPL\n      </Typography>\n\n\n     \n\n      {routes.filter((route:RouteInfo) => route.displayLabel != \"\") .map((route:RouteInfo)=>{\n      return (\n\n        \n        <Button color=\"inherit\" component={Link1} to={route.path}>\n        {route.displayLabel}\n      </Button>\n\n        \n        );\n        })}\n      </Toolbar>\n    </AppBar>\n      \n      <Switch>\n        {routes.map((route:RouteInfo)=>{\n          return (<Route exact path={route.path} component={route.component}></Route>);\n        })}\n        \n      </Switch>\n      \n      </div>\n\n        )\n      }\n      }\n","\nimport {observable} from 'mobx';\nimport * as _ from 'lodash';\n\n\nvar heroImageData = require('./../data/heroImage.json'); \n\nexport class HeroDetails{\n    @observable tagLine?:string;\n    @observable moto?:string;\n    @observable primaryAction?:string;\n    @observable primaryActionUrl?:string;\n    @observable secondaryAction?:string;\n    @observable secondaryActionUrl?:string;\n\n    constructor(){\n\n        _.assign(this, heroImageData)\n    }\n\n}\n","import { BusinessDetails } from './../data/BusinessDetails';\nimport {observable} from 'mobx';\nimport * as _ from 'lodash';\nvar heroImageData = require('./../data/heroImage.json'); \nexport default class CompanyDetailStore {\n\n    @observable businessDetails:BusinessDetails;\n\n    constructor(){\n        this.businessDetails = {};\n        _.assign(this.businessDetails, heroImageData)\n    }\n}","import { HeroDetails } from './HeroStore';\nimport CompanyDetailStore from './BusinessDetailsStore';\nexport const allStores ={\n\n   heroDetails: new HeroDetails(),\n   companyDetailStore : new CompanyDetailStore()\n\n}","import React from 'react';\nimport './App.css';\n\nimport 'typeface-roboto';\nimport AppNavBar from './AppNavBar/AppNavBar';\nimport { allStores } from './stores/AllStores';\nimport {Provider} from 'mobx-react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  HashRouter\n} from \"react-router-dom\";\n\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Provider {...allStores}>\n      <HashRouter basename='/'>\n      <AppNavBar></AppNavBar>\n      </HashRouter>\n    </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}